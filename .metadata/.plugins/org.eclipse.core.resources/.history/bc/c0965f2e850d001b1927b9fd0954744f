/*
 * buttons.c
 */

#include"buttons.h"
static volatile uint32_t buttonStatus = 0;

void ButtonSetStatus(uint32_t status)
{
	buttonStatus = status;
}

void ButtonResetStatus(void)
{
	buttonStatus = 0;
}

uint32_t ButtonGetStatus(void)
{
	uint32_t temp;
	temp = buttonStatus;
	ButtonResetStatus();

	return temp;
}

void ButtonsInit(void)
{
	//Initialize the GPIO structure
	GPIO_InitTypeDef GPIO_InitStructure;
	//Enable the AHB1 peripheral clock
	RCC_AHB1PeriphClockCmd(BWAKEUPPORTCLK|BTAMPERPORTCLK|BUSER1PORTCLK|BUSER2PORTCLK, ENABLE);

	GPIO_InitStructure.GPIO_Pin = BWAKEUP|BUSER1;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;

	GPIO_Init(BWAKEUPPORT, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = BTAMPER;
	GPIO_Init(BTAMPERPORT, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = BUSER2;
	GPIO_Init(BUSER2PORT, &GPIO_InitStructure);
}

void ButtonsInitEXTI(void)
{
	EXTI_InitTypeDef EXTI_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

	GPIO_EXTILineConfig(BWAKEUPPORTSOURCE, BWAKEUPPINSOURCE);
	GPIO_EXTILineConfig(BTAMPERPORTSOURCE, BTAMPERPINSOURCE);
	GPIO_EXTILineConfig(BUSER1PORTSOURCE, BUSER1PINSOURCE);
	GPIO_EXTILineConfig(BUSER2PORTSOURCE, BUSER2PINSOURCE);
}
